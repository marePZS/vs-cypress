{
	"info": {
		"_postman_id": "f3dc2623-ffb8-47cb-9690-b6b0d4a607d8",
		"name": "VS Gatalo Marko",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var tokenApp = jsonData.token;\r",
							"var userId = jsonData.user.id;\r",
							"\r",
							"pm.environment.set(\"token\", tokenApp);\r",
							"pm.environment.set(\"userIdEnv\", userId)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"g-recaptcha-response\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new organization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var orgId = jsonData.id;\r",
							"var orgName = jsonData.name;\r",
							"var orgOwner = jsonData.owner_id;\r",
							"\r",
							"pm.environment.set('organizationIdEnv', orgId);\r",
							"pm.environment.set('organizationNameEnv', orgName);\r",
							"pm.environment.set('organizationOwnerEnv', orgOwner)\r",
							"\r",
							"pm.test(\"checking organization id, name and owner\", function () {  \r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"organizationIdEnv\"));\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"organizationNameEnv\"));\r",
							"    pm.expect(jsonData.owner_id).to.eql(pm.environment.get(\"organizationOwnerEnv\"));\r",
							"});\r",
							"\r",
							"pm.test(\"check org name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"pm organizacija1\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "pm organizacija1",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/organizations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add organization without name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);   \r",
							"});\r",
							"\r",
							"pm.test(\"Error msg\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The name field is required\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": " ",
							"type": "text"
						},
						{
							"key": "avatar_crop_cords",
							"value": "{}",
							"type": "text"
						},
						{
							"key": "file",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/organizations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations"
					]
				}
			},
			"response": []
		}
	]
}